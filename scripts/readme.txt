# How to insert sql file to database

- Setup the app: Run `docker-compose up -d`
- Locate the sql file: test.sql
- Copy sql file to container: Run `docker cp test.sql tc-online-db:/tmp`
- Get shell of container: Run `docker exec -it tc-online-db bash`
- Import sql file to database: Run `dbaccess tcs_catalog /tmp/test.sql`


# How to edit the active date

See query on table project_phase in example.sql
There are several phase in a project 
At minimum, it have Registration, Submission, Review
In each phase there are several field related to date:
fixed_start_time: start of phase
scheduled_start_time: same as fixed_start_time
scheduled_end_time: end of phase
duration: duration (end_time - start_time) 

The format of time is YYYY-MM-DD HH:MM:SS
And duration field is in milliseconds

If time now is passing the end of the phase then it will be closed, field phase_status_id = 3 (Closed)
If time in between start time and end time of phase, field phase_status_id = 2 (Open)
If time is before start time of phase, field phase_status_id = 1 (Scheduled)


# How to edit track or category.

See query on table project in example.sql
Edit project_category_id field to number desired.
For Dev Challenge, it usually use 39 (Code)
For Design Challenge, it may vary, but usually 17 (Web Design)
For QA, 9 (Bug Hunt)
For Data Science, 37 (Marathon Match)
For First2Finish, 38 for code, and 40 for design
For Task, I can't find any. Maybe it's managed in different system?


# See `example.sql` for how query of single project looks like 

video-reskin.mp4 is proof of reskin
main-tab.png is proof how active state of main tabs looks like in other page. Since this challenge only reskin viewProjectDetail, I dont make any change to other page in the commit.
test.sql is autogenerated using generate.py

# How to produce test.sql

It required python installed
Run `TZ=America/Indiana/Indianapolis python generate.py > test.sql`
It change timezone to EDT and generate query then save to test.sql
This is to synchronize with timezone of tc-online-review set on docker-compose.yml

By default it will produce 100 project, it can be modified by edit `total` variable in the top of file generate.py.

```
init_project_id = 2000 # Change to avoid duplicate data to be inserted
total = 100 # Change to how many project
```
Take a look for how it works.

In short, the script will choice the track/category randomly and set the time randomly with fixed duration.
Here is example of configuration for QA track. This will make QA project with three phases,
registration, submission, and review. 

```
'qa': {
	'name': 'QA',
	'project_category_id': 9, # Bug Hunt
	'project_phases': {
		1: {
			'duration': 48, # in hour
			'criteria': [[2, '0'], [5, 'No']]
			}, # Register
		2: {
			'duration': 48,
			'criteria': [[3, '0'], [5, 'No']]
			}, # Submission
		4: {
			'duration': 24,
			'criteria': [[5, 'No'], [1, '30000413']]
			}, # Review
	}
},
```

Editing date by hand is cumbersome. We can just edit duration of how long the phase, then regenerate sql.
The random time handle by this code.

```
random_hours = random.randint(0, 168) # Random time from now to 168 hours (7 days) ago to cover various active phase
```

To make projects have various active phase, edit 168 to total duration of phases.
The registration and submission begin at same time. So for QA here, 48 + 24 = 72. Other track may have more than that.
