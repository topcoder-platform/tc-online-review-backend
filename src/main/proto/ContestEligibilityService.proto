syntax = "proto3";
package contesteligibility;
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
option java_multiple_files = true;
option java_package = "com.topcoder.onlinereview.component.grpcclient.contesteligibility.protos";
option java_outer_classname = "ContestEligibilityProtos";

message CreateRequest {
    google.protobuf.Int64Value contest_id = 1;
    google.protobuf.BoolValue studio = 2;
}

message GetIdByContestIdRequest {
    google.protobuf.Int64Value contest_id = 1;
}

message GetIdByContestIdResponse {
    google.protobuf.Int64Value contest_eligibility_id = 1;
}

message RemoveRequest {
    google.protobuf.Int64Value contest_eligibility_id = 1;
}

message BulkRemoveRequest {
    repeated int64 contest_eligibility_ids = 1;
}

message UpdateRequest {
    google.protobuf.Int64Value contest_eligibility_id = 1;
    google.protobuf.Int64Value contest_id = 2;
    google.protobuf.BoolValue studio = 3;
}

message GetContestEligibilityRequest {
    google.protobuf.Int64Value contest_id = 1;
    google.protobuf.BoolValue studio = 2;
}

message ContestEligibilitiesResponse {
    repeated GroupContestEligibilityProto group_contest_eligibilities = 1;
}

message GroupContestEligibilityProto {
    google.protobuf.Int64Value contest_eligibility_id = 1;
    google.protobuf.Int64Value contest_id = 2;
    google.protobuf.BoolValue studio = 3;
    google.protobuf.Int64Value group_id = 4;
}

message HaveEligibilityRequest {
    repeated int64 contest_ids = 1;
    google.protobuf.BoolValue studio = 2;
}

message HaveEligibilityResponse {
    repeated int64 contest_ids = 1;
}

service ContestEligibilityService {
    rpc create(CreateRequest) returns (google.protobuf.Empty);
    rpc getIdByContestId(GetIdByContestIdRequest) returns (GetIdByContestIdResponse);
    rpc remove(RemoveRequest) returns (google.protobuf.Empty);
    rpc bulkRemove(BulkRemoveRequest) returns (google.protobuf.Empty);
    rpc update(UpdateRequest) returns (google.protobuf.Empty);
    rpc getContestEligibility(GetContestEligibilityRequest) returns (ContestEligibilitiesResponse);
    rpc haveEligibility(HaveEligibilityRequest) returns (HaveEligibilityResponse);
}